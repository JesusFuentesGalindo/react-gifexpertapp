{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","props","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","setCategoryes","estado","type","value","onChange","target","placeholder","getGifs","categoria","a","api_url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url_img","images","downsized_large","url","GifGridItem","className","src","alt","GifGrid","loading","img_data","setImgData","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","setCategorias","ReactDOM","render","document","getElementById"],"mappings":"iNAqCeA,EAlCG,SAACC,GAGf,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEI,sBAAMC,SAbS,SAACC,GAEhBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,EAAMS,eAAc,SAAAC,GAAM,OAAGR,GAAH,mBAAiBQ,OAC3CP,EAAc,MAMlB,SACI,uBAAOQ,KAAK,OAAOC,MAAOV,EAAYW,SAnBtB,SAACR,GAErBF,EAAcE,EAAES,OAAOF,QAiBgDG,YAAY,+B,+BC3B9EC,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,4DAEH,mCACRC,EAHW,iDAGuCC,UAAUH,GAHjD,6BAEH,oCAFG,SAKAI,MAAMF,GALN,cAKXG,EALW,gBAOEA,EAAKC,OAPP,uBAOVC,EAPU,EAOVA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAChB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVC,QAAQH,EAAII,OAAOC,gBAAgBC,QAb1B,kBAiBTR,GAjBS,4CAAD,sDCYLS,G,MAVG,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,QAAQD,EAAY,EAAZA,MAAY,EAAND,GAE9B,OACI,sBAAKO,UAAU,2DAAf,UACI,qBAAKC,IAAKN,EAASO,IAAKR,IACxB,4BAAIA,SCgBDS,EAlBD,SAACtC,GAEX,IACA,ECLsB,SAACiB,GAEvB,MAA8BhB,mBAAS,CAEnCuB,KAAK,GACLe,SAAQ,IAHZ,mBAAOC,EAAP,KAAgBC,EAAhB,KAcA,OARAC,qBAAU,WAEN1B,EAAQC,GAAW0B,MAAK,SAAAC,GAAI,OAAEH,EAAW,CACrCjB,KAAKoB,EACLL,SAAQ,SAEd,CAACtB,IAEIuB,EDXqBK,CAAa7C,EAAMiB,WAAnCc,EAAZ,EAAOP,KAAYe,EAAnB,EAAmBA,QAEnB,OACI,eAAC,WAAD,WACI,6BAAKvC,EAAMiB,YACVsB,GAAS,4CACV,qBAAKJ,UAAU,YAAf,SACkCJ,EADlC,0BAEQ,cAAC,EAAD,eAA8BJ,GAAZA,EAAIC,MAF9B,YEWGkB,EArBI,WAEf,MAAiC7C,mBAAS,CAAC,kBAA3C,mBAAO8C,EAAP,KAAkBC,EAAlB,KAGA,OAEI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAavC,cAAeuC,IAC5B,uBAEA,6BACwCD,EADxC,0BAEQ,cAAC,EAAD,CAAyB9B,UAAWA,GAAtBA,KAFtB,YCVZgC,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.3f91cb8b.chunk.js","sourcesContent":["import {useState} from \"react\";\nimport PropTypes from 'prop-types';\n\nconst AddCategory=(props)=>{\n\n    //Estado\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange=(e)=>{\n\n        setinputValue(e.target.value);\n    };\n\n    const handleSubmit=(e)=>{\n\n        e.preventDefault();\n\n        if(inputValue.trim().length>2){\n            \n            props.setCategoryes(estado=>[inputValue,...estado]);\n            setinputValue('');\n        }\n    };\n\n    return(\n\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} placeholder=\"Indica una categorÃ­a\" />\n        </form>\n    );\n};\n\nAddCategory.propTypes={\n\n    setCategoryes:PropTypes.func.isRequired\n};\n\nexport default AddCategory;","export const getGifs=async(categoria)=>{\n\n    const api_key='3G42F4ap7oC8soAm9SMUvNP9gfAjJ9XL';\n    const api_url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=${api_key}`;\n\n    const resp=await fetch(api_url);\n\n    const {data}=await resp.json();\n\n    const gifs=data.map(img=>{\n        return({\n            id:img.id,\n            title:img.title,\n            url_img:img.images.downsized_large.url\n        });\n    });\n    \n    return (gifs);\n};","import 'animate.css';\n\nconst GifGridItem=({url_img,title,id})=>{\n\n    return (\n        <div className='card animate__animated animate__fadeIn animate__delay-1s'>\n            <img src={url_img} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;","import { /* useState,useEffect, */ Fragment } from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\n\nconst GifGrid=(props)=>{\n    \n    let img;\n    const {data:images,loading}=useFetchGifs(props.categoria);\n        \n    return(\n        <Fragment>\n            <h3>{props.categoria}</h3>\n            {loading&&<p>Cargando...</p>}\n            <div className='card-grid'>\n                <For each='img' index='i' of={images}>\n                    <GifGridItem key={img.id} {...img} />\n                </For>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default GifGrid;","import { useState,useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs=(categoria)=>{\n\n    const [img_data,setImgData] = useState({\n\n        data:[],\n        loading:true\n    });\n\n    useEffect(() => {\n\n        getGifs(categoria).then(imgs=>setImgData({\n            data:imgs,\n            loading:false\n        }));\n    },[categoria]);\n\n    return img_data;\n};","import React, {Fragment,useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp=()=>{\n\n    const [categorias,setCategorias]=useState(['One Punch Man']);\n    let categoria;\n\n    return(\n\n        <Fragment>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategoryes={setCategorias}/>\n            <hr />\n\n            <ol>\n                <For each=\"categoria\" index='i' of={categorias}>\n                    <GifGrid key={categoria} categoria={categoria} />\n                </For>\n            </ol>\n        </Fragment>\n    );\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />,document.getElementById('root'));\n"],"sourceRoot":""}